name: gETH midrate daily

permissions:
  contents: write

on:
  schedule:
    # JST 09:00 = UTC 00:00（必要に応じて変更）
    - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  log:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # pushするので履歴が要る

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install deps
        run: npm install

      - name: Run logger (single shot)
        run: node index.mjs --interval 0 --out data/geth_mid.csv
        env:
          BASE_RPC_URL: ${{ secrets.BASE_RPC_URL }}

      - name: Append to monthly CSV
        run: |
          set -e
          month=$(date -u +"%Y-%m")
          mkdir -p data
          if [ ! -f "data/geth_mid_${month}.csv" ]; then
            cp data/geth_mid.csv "data/geth_mid_${month}.csv"
          else
            tail -n +2 data/geth_mid.csv >> "data/geth_mid_${month}.csv"
          fi

      - name: Commit monthly CSV
        run: |
          set -e
          BRANCH="${GITHUB_REF_NAME:-main}"
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git switch "$BRANCH" || git checkout -B "$BRANCH"
          git pull --rebase origin "$BRANCH" || true
          git add data/geth_mid_*.csv
          git commit -m "append: $(date -u +%FT%TZ)" || echo "no changes"
          git push origin "$BRANCH"

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Python deps
        run: pip install pandas matplotlib

      - name: Make charts
        run: |
          python - <<'PY'
          import glob, os
          import pandas as pd
          import matplotlib.pyplot as plt
          from matplotlib.ticker import ScalarFormatter

          os.makedirs("charts", exist_ok=True)
          files = sorted(glob.glob("data/geth_mid_*.csv"))
          if not files:
              raise SystemExit("no monthly csvs found")

          df = pd.concat([pd.read_csv(f) for f in files], ignore_index=True)
          df['timestamp_iso'] = pd.to_datetime(df['timestamp_iso'])
          df = df.sort_values('timestamp_iso')

          # 1) NAV (WETH per gETH)
          fig, ax = plt.subplots(figsize=(8,4))
          y = df['weth_per_geth_mid']
          ax.plot(df['timestamp_iso'], y)
          ax.set_title('gETH NAV (WETH per gETH)')
          ax.set_xlabel('time'); ax.set_ylabel('WETH/gETH'); ax.grid(True, alpha=0.3)
          fmt = ScalarFormatter(useOffset=False, useMathText=False)
          fmt.set_scientific(False)
          ax.yaxis.set_major_formatter(fmt)
          lo, hi = y.min(), y.max()
          pad = max((hi - lo) * 3, 0.0005)

::contentReference[oaicite:0]{index=0}
